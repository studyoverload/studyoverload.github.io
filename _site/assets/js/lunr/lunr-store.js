var store = [{
        "title": "無程式經驗，如何在Github用Jekyll建Blog (問題篇）",
        "excerpt":"本文寫給毫無程式經驗，想要用 Jekyll 在 Github 建 Blog 的新手，內含我如何參考網路教學文和問題解決的心得。教學步驟文寫看這篇。 在開始之前 我想在閱讀這篇文章的讀者，大多數已經決定要在 Github 用 Jekyll 建 Blog了，或許你已經讀過一輪 Google 搜尋 排名第一頁的所有文章，或是在做的過程中遇到一些問題。有幾件事情是我希望在開始之前就知道的，可以幫助我有效率的解決途中的 bug，和培養學習心態。 參考官方教學指南 我知道看原文感覺很麻煩，但這是最貼近開發者思維的方法。由其他工程師撰寫的中文教學文，很多在步驟上和使用的程式碼會不一樣，因為寫程式沒有標準答案。當初我先選了一個人的教學跟著做，遇到問題後，我開始搜尋其他人的作法，但這讓我充滿困惑。身為程式初學者，我無法判斷哪些元件要不要安裝，哪些步驟是否適用於我的設置環境，我只知道我的東西跑不出來。 於是我找出 Jeykll 的官方設置文、Github相關教學文，以及我使用的 Jekyll Theme 設置指南，心想這些開發者要別人使用他們的產品，那當然要有完整的教學文才是。 心態建立 就算有步驟文教學，有很大的機率，會有 bug。根據每個人系統不同（Windows、MacOS)、安裝的程式版本內容差異，甚至是少一個空格或拼字錯誤，都有可能會花上許多時間修正。保持耐心，仔細閱讀錯誤訊息，若有不理解之處，可以參考 Troubleshooting Jekyll build errors for Github 如果找不到的話，再丟上 Google 搜尋，或是請有程式經驗的朋友幫忙看看。如果還是無法解決，可以找看看 寫心得筆記 對於初學者來說，看到一堆程式碼和落落長的英文教學，頭就痛了起來。儘管可以跟著教學文的步驟做，但通常這些都是有經驗的工程師所寫的文章，內容比較簡略，有許多基本的用詞還是需要自己去查的。初學者的優勢在於什麼都不懂，能夠同理一些基礎問題，幫助其他初學者從0開始。舉一個簡單的指令為例： 進到本機的 blog 資料夾，執行 bundle 像這樣短短一句話，只要你不知道要如何進到指定的資料夾中，或是執行 bundle 出現錯誤，就有可能卡關很久。他的意思是： 進入終端機 輸入 cd blog...","categories": [],
        "tags": ["blog"],
        "url": "/start/",
        "teaser": null
      },{
        "title": "無程式經驗，如何在Github用Jekyll建Blog (教學篇）",
        "excerpt":"本文寫給毫無程式經驗，想要用 Jekyll 在 Github 建 Blog 的新手，內含步驟文和實踐心得。   部落格之始  如果你想要建部落格，有滿多人會從現有的部落格平台（痞客邦、Medium）開始，只要註冊就可以開始發布內容了。   如果你想要擁有網站的自主權又不想碰太多程式編寫的部分，可以選擇 Wordpress.org ，眾多外掛任你挑，掌握SEO數據和資料庫。網路上有很多教學文，註冊後購買主機 (hosting) 和域名 (domain)，就建好了。我另一個部落格也是用 Wordpress 建置，有興趣的話，也許之後可以寫教學心得文。   如果你想要開始學寫程式，建立自己的 Github Page 是滿好的開始，可以紀錄學習的過程，也能夠為其他有相似問題的人提供解法。我個人而言，除了想要練習寫文章、學程式之外，更大的原因是不想花錢買主機和個人網域，就開始了簡單設置個人 Blog 的念頭。其實我連用 Wordpress 架的另一個網站也是用 Github Page 的方式，沒有去買主機。   Jekyll 是什麼？  Jekyll 是一個簡單的靜態網站生成器 (static site generator)，它是由 Ruby 編寫而成，將純文本文檔（Markdown, HMTL, CSS) 轉換成靜態網站。他很簡單直觀，適合初學者使用。網路上有滿多參考文章，和佈景主題可以選，跟著步驟做，很快就可以做出來了。最吸引人的地方是，Jekyll 可以和 Github Page 搭配，做出免費美觀的 Blog。  ","categories": [],
        "tags": ["blog"],
        "url": "/jekyll-github/",
        "teaser": null
      }]
